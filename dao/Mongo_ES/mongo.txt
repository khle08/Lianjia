集合操作符
$in 任一参数在引用集合中，则匹配
$all 如果所有参数在引用集合里且被使用在包含数组的文档中，则匹配
$nin 如果没有参数在引用集合里，则匹配

布尔运算符
$ne 不匹配参数条件
$not 不匹配结果
$or 有一个匹配成立就成立
$nor 所有条件都不匹配
$and 所有条件都匹配
$exists 判断元素是否存在

db.products.find(
	'main_id':{
	'$in':[
		ObjectId('ddd'),
		ObjectId('ddd')
	]
	}
}
{'detail.color':{'$nin':["black","blue"]}}
{'detail.color':{'$all':["black","blue"]}}
{'detail.color':{'$exists':true}}
数组操作
$elemMatch
$size



{
"tags":["tools","aaa"]
}
db.products.find({"tags":"soil"})

db.products.find({"tags.0":"soil"})
仅当我们需要匹配多个或者更多属性的子文档才使用$elemMatch
db.users.find(
	'addresss':{
		'$elemMatch':{
			'name' : 'home',
			'state':'NY'
		}
	}
)
$size允许通过自身大小查询数组
db.users.find({'addresses':{'$size':3}})
查询选择
$slice 选择返回文档的子集
db.users.find({},{''username:1})
排除相反字段
db.users.find({'address':0,'payments':0})
将返回值的范围存储到一个数组
db.users.find({},{'reviews':{'$slice':12}})

db.users.find({},{'reviews':{'$slice':-5}})